{"version":3,"sources":["types/types.tsx","axios/api.tsx","components/Example.tsx","components/ButtonAppBar.tsx","components/pokemonCard/PokemonCard.tsx","test/TestCharles.tsx","test/TestLarry.tsx","test/TestEldon.tsx","test/TestJammie.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Boat","bid","bname","color","tostring","this","apiUrl","getBasePokemon","myPokedexNumber","axios","post","fname","dataPacket","pokedexNumber","deletePokemon","pokeID","id77","getItem","itemName","name77","getParty","partyID","deleteParty","getUser","userID","getUserID","username","getMove","moveName","addPokemon","lev","nickname","party_id","pokedex_number","level","Example","useState","count","setCount","setAllBoats","boatCount","setBoatCount","React","useEffect","then","response","console","log","data","length","p","name","age","parent","boat","onClick","toString","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","to","Button","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","PokemonCard","props","pkmn","expanded","setExpanded","anchorEl","setAnchorEl","handleClose","Card","CardHeader","Avatar","action","aria-controls","aria-haspopup","event","currentTarget","id","keepMounted","open","Boolean","onClose","MenuItem","baseInfo","subheader","CardMedia","image","sprite_data","CardContent","component","align","hp","attack","defense","special_attack","special_defense","speed","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","JSON","stringify","holding","moves","TestCharles","type1","type2","base","setBase","setItem","res","myBulbasaur","pkID","move_name","power","accuracy","type","pp","effect","item_name","item_description","TextField","label","onChange","e","target","value","TestLarry","partyid","base2","handleInputChange","tackle","airMail","myIvysaur","pokemon","TestEldon","move1","poki1","party1","member","user1","user_id","partyDel","setPartyDel","user","setUser","userName","setUserName","move","setMove","pokeDel","setPokeDel","itemDel","setItemDel","pk_id","TestJammie","moveLearned","pokemonID","moveA","moveB","moveC","moveD","move2","move3","move4","setAddParty","App","exact","path","Component","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.68a51c10.chunk.js","sourcesContent":["export class Boat {\r\n    bid: string;\r\n    bname: string;\r\n    color: string;\r\n\r\n    constructor(bid: string, bname: string, color: string) {\r\n        this.bid = bid;\r\n        this.bname = bname;\r\n        this.color = color;\r\n    }\r\n\r\n    public tostring = (): string => {\r\n        return `Boat (bid: ${this.bid}, bname: ${this.bname}, color: ${this.color})`;\r\n    };\r\n}\r\n\r\nexport type Person = {\r\n    name: string;\r\n    age: number;\r\n    parent?: Person;\r\n};\r\n\r\n//Specific\r\n\r\nexport type Party = {\r\n    party_id: number;\r\n    member: Pokemon[];\r\n};\r\n\r\nexport type BasePokemon = {\r\n    pokedex_number: number;\r\n    name: string;\r\n    type1: string;\r\n    type2?: string;\r\n    hp: number;\r\n    attack: number;\r\n    defense: number;\r\n    special_attack: number;\r\n    special_defense: number;\r\n    speed: number;\r\n    sprite_data: string;\r\n};\r\n\r\nexport type Pokemon = {\r\n    pkID: number;\r\n    nickname: string;\r\n    level: number;\r\n    holding?: Item;\r\n    moves: Move[];\r\n    baseInfo: BasePokemon;\r\n};\r\n\r\nexport type Item = {\r\n    item_name: string;\r\n    item_description: string;\r\n};\r\n\r\nexport type User = {\r\n    user_id: number;\r\n    username: string;\r\n};\r\n\r\nexport type Move = {\r\n    move_name: string;\r\n    power: number;\r\n    accuracy: number;\r\n    type: string;\r\n    pp: number;\r\n    effect: string;\r\n};\r\n","import axios from 'axios';\r\nimport { Boat, BasePokemon, Item, Party, User, Move, Pokemon } from '../types/types';\r\n\r\nconst apiUrl = 'http://localhost/cs4750/pokemon-party-manager/src/php/';\r\n\r\nexport function getAllBoats() {\r\n    return axios.post<Boat[]>(apiUrl + 'getAllBoats.php', { fname: 'getAllBoats' });\r\n}\r\n\r\nexport function getABoat() {\r\n    return axios.post<Boat>(apiUrl + 'getAllBoats.php', { fname: 'getABoat' });\r\n}\r\n\r\nexport function addBoat(boat: Boat) {\r\n    return axios.post(apiUrl + 'addBoat.php', { fname: 'addBoat', dataPacket: boat });\r\n}\r\n\r\nexport function getBasePokemon(myPokedexNumber: number) {\r\n    return axios.post<BasePokemon>(apiUrl + 'pokemon.php', {\r\n        fname: 'getBasePokemon',\r\n        dataPacket: { pokedexNumber: myPokedexNumber },\r\n    });\r\n}\r\n\r\nexport function deletePokemon(pokeID: number) {\r\n    return axios.post<Pokemon>(apiUrl + 'pokemon.php', { fname: 'deletePokemon', dataPacket: { id77: pokeID } });\r\n}\r\n\r\n//Items\r\nexport function getItem(itemName: String) {\r\n    return axios.post<Item>(apiUrl + 'item.php', { fname: 'getItem', dataPacket: { name77: itemName } });\r\n}\r\n\r\nexport function gainItem(pokemonID: number, itemName: String) {\r\n    return axios.post<Item>(apiUrl + 'item.php', { fname: 'gainItem', dataPacket: { pk_id: pokemonID, name77: itemName } });\r\n}   // Jammie\r\nexport function loseItem(pk_id: number, itemName: String) {\r\n    return axios.post<Item>(apiUrl + 'item.php', { fname: 'loseItem', dataPacket: { pk_id: pk_id, name77: itemName } });\r\n}\r\n\r\n//Party\r\nexport function getParty(partyID: number) {\r\n    return axios.post<Party>(apiUrl + 'party.php', { fname: 'getParty', dataPacket: { id77: partyID } });\r\n}\r\n\r\nexport function deleteParty(partyID: number) {\r\n    return axios.post<Party>(apiUrl + 'party.php', { fname: 'deleteParty', dataPacket: { id77: partyID } });\r\n}\r\n\r\nexport function addParty(userID: number) {\r\n    return axios.post<Party>(apiUrl + 'party.php', { fname: 'addParty', dataPacket: { id77: userID } });\r\n} // Jammie\r\n\r\n//User\r\nexport function getUser(userID: number) {\r\n    return axios.post<User>(apiUrl + 'user.php', { fname: 'getUser', dataPacket: { id77: userID } });\r\n}\r\n\r\nexport function getUserID(username: String) {\r\n    return axios.post<User>(apiUrl + 'user.php', { fname: 'getUserID', dataPacket: { id77: username } });\r\n}\r\n\r\n//Move\r\nexport function getMove(moveName: String) {\r\n    return axios.post<Move>(apiUrl + 'move.php', { fname: 'getMove', dataPacket: { name77: moveName } });\r\n}\r\n\r\nexport function learnMove(pokemonID: number, moveA: String, moveB: String, moveC: String, moveD: String) {\r\n    return axios.post<Move>(apiUrl + 'move.php', { fname: 'learnMove', dataPacket: { pk_id: pokemonID, move1: moveA, move2:moveB, move3:moveC, move4:moveD} });\r\n} // Jammie\r\n\r\n\r\nexport function forgetMove(pokemonID: number, moveName:String) {\r\n    return axios.post<Move>(apiUrl + 'move.php', { fname: 'forgetMove', dataPacket: { pk_id: pokemonID, name77: moveName } });\r\n} // Jammie\r\n//Something for specific pokemon\r\nexport function getSpecificPokemon(pkid: number) {\r\n    return axios.post<Pokemon>(apiUrl + 'pokemon.php', {\r\n        fname: 'getSpecificPokemon',\r\n        dataPacket: { pokemonid: pkid },\r\n    });\r\n}\r\n\r\nexport function addPokemon(pokedexNumber: number, lev: number, nickname: String, party_id: number) {\r\n    return axios.post<string>(apiUrl + 'pokemon.php', {\r\n        fname: 'addPokemon',\r\n        dataPacket: { pokedex_number: pokedexNumber, level: lev, nickname: nickname, party_id: party_id },\r\n    });\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Boat, Person } from '../types/types';\r\nimport { getAllBoats, addBoat, getABoat } from '../axios/api';\r\nimport ExampleBoatView from './ExampleBoatView';\r\n\r\nfunction Example() {\r\n    // Declare a new state variable, which we'll call \"count\"\r\n    const [count, setCount] = useState(0);\r\n    const [bid, setBID] = useState('000');\r\n    const [allBoats, setAllBoats] = useState<Boat[]>([]);\r\n    const [boatCount, setBoatCount] = useState<number>(0);\r\n\r\n    const apiUrl = 'http://localhost/cs4750/pokemon-party-manager/src/php/getAllBoats.php';\r\n\r\n    React.useEffect(() => {\r\n        getAllBoats().then((response) => {\r\n            console.log(response.data);\r\n            setAllBoats(response.data);\r\n            setBoatCount(response.data.length);\r\n            let p: Person = { name: 'Charles', age: 22 };\r\n            console.log(p);\r\n            p.parent = { name: 'Charles', age: 22 };\r\n            console.log(p);\r\n\r\n            let boat = getABoat();\r\n            console.log(boat);\r\n        });\r\n    }, [count]);\r\n\r\n    return (\r\n        <div>\r\n            <p>SELECT: {boatCount} </p>\r\n            <p>You clicked {count} times</p>\r\n            <button onClick={() => setCount(count + 1)}>Click me</button>\r\n            <button\r\n                onClick={() => {\r\n                    setCount(count + 1);\r\n                    addBoat(new Boat(count.toString(), 'newBoatName', 'white'));\r\n                }}\r\n            >\r\n                Add Boat\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\nexport default Example;\r\n","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function ButtonAppBar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        News\r\n                    </Typography>\r\n\r\n                    <Link to=\"/test/charles\">\r\n                        <Button>Charles</Button>\r\n                    </Link>\r\n\r\n                    <Link to=\"/test/larry\">\r\n                        <Button>Larry</Button>\r\n                    </Link>\r\n\r\n                    <Link to=\"/test/eldon\">\r\n                        <Button>Eldon</Button>\r\n                    </Link>\r\n\r\n                    <Link to=\"/test/jammie\">\r\n                        <Button>Jammie</Button>\r\n                    </Link>\r\n                    <Link to=\"/\">\r\n                        <Button>Home</Button>\r\n                    </Link>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'; // we need this to make JSX compile\r\nimport { BasePokemon, Item, Move, Pokemon } from '../../types/types';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\ninterface WelcomeProps {\r\n    pkmn: Pokemon;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            maxWidth: 345,\r\n        },\r\n        media: {\r\n            height: 0,\r\n            paddingTop: '56.25%', // 16:9\r\n        },\r\n        expand: {\r\n            transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n            transition: theme.transitions.create('transform', {\r\n                duration: theme.transitions.duration.shortest,\r\n            }),\r\n        },\r\n        expandOpen: {\r\n            transform: 'rotate(180deg)',\r\n        },\r\n        avatar: {\r\n            backgroundColor: red[500],\r\n        },\r\n    }),\r\n);\r\n\r\nconst PokemonCard: React.FC<WelcomeProps> = (props) => {\r\n    let pkmn = props.pkmn;\r\n\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [hidden, setHidden] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                        {pkmn.level}\r\n                    </Avatar>\r\n                }\r\n                action={\r\n                    <div>\r\n                    <IconButton aria-controls=\"setting\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                    <Menu\r\n                    id=\"setting\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                    >\r\n                    <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                    </Menu>\r\n                </div>\r\n                }\r\n                title={pkmn.baseInfo.name}\r\n                subheader={pkmn.nickname ? pkmn.nickname : ''}\r\n            />\r\n            <CardMedia className={classes.media} image={pkmn.baseInfo.sprite_data} title={pkmn.baseInfo.name} />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" align=\"right\">\r\n                    HP: {pkmn.baseInfo.hp} <br />\r\n                    Attack: {pkmn.baseInfo.attack} <br />\r\n                    Defense: {pkmn.baseInfo.defense} <br />\r\n                    Special Attack: {pkmn.baseInfo.special_attack} <br />\r\n                    Special Defense: {pkmn.baseInfo.special_defense} <br />\r\n                    Speed: {pkmn.baseInfo.speed} <br />\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                <IconButton aria-label=\"add to favorites\">\r\n                    <FavoriteIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"share\">\r\n                    <ShareIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                    className={clsx(classes.expand, {\r\n                        [classes.expandOpen]: expanded,\r\n                    })}\r\n                    onClick={handleExpandClick}\r\n                    aria-expanded={expanded}\r\n                    aria-label=\"show more\"\r\n                >\r\n                    <ExpandMoreIcon />\r\n                </IconButton>\r\n            </CardActions>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                    <Typography paragraph>Item:</Typography>\r\n                    <Typography paragraph>{JSON.stringify(pkmn.holding)}</Typography>\r\n                    <Typography paragraph>Move 1:</Typography>\r\n                    <Typography paragraph>{JSON.stringify(pkmn.moves[0])}</Typography>\r\n                    <Typography paragraph>Move 2:</Typography>\r\n                    <Typography paragraph>{JSON.stringify(pkmn.moves[1])}</Typography>\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React, { useState } from 'react';\r\nimport { getBasePokemon, getItem, addPokemon } from '../axios/api';\r\nimport { BasePokemon, Item, Pokemon, Move } from '../types/types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PokemonCard from '../components/pokemonCard/PokemonCard';\r\n\r\nfunction TestCharles() {\r\n    // Declare a new state variable, which we'll call \"count\"\r\n    let bulbasaur: BasePokemon = {\r\n        pokedex_number: 1,\r\n        name: 'Bulbasaur',\r\n        type1: 'Grass',\r\n        type2: 'Poison',\r\n        hp: 45,\r\n        attack: 49,\r\n        defense: 49,\r\n        special_attack: 65,\r\n        special_defense: 65,\r\n        speed: 45,\r\n        sprite_data: 'https://img.pokemondb.net/artwork/bulbasaur.jpg',\r\n    };\r\n\r\n    const [count, setCount] = useState<number>(1);\r\n    const [base, setBase] = useState<BasePokemon>(bulbasaur);\r\n    const [item, setItem] = useState<Item>();\r\n\r\n    React.useEffect(() => {\r\n        getBasePokemon(count).then((res) => {\r\n            setBase(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    React.useEffect(() => {\r\n        getItem('poke-ball').then((res) => {\r\n            setItem(res.data);\r\n            console.log(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n\r\n    \r\n    React.useEffect(() => {\r\n        addPokemon(count, 77,\"frontend Test\",  2).then((res) => {\r\n            console.log(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    const handleInputChange = (e) => {\r\n        setCount(e.target.value);\r\n    };\r\n\r\n    let tackle: Move = {\r\n        move_name: 'Tackle',\r\n        power: 40,\r\n        accuracy: 100,\r\n        type: 'Normal',\r\n        pp: 35,\r\n        effect: 'Charges the foe with a full-body tackle.',\r\n    };\r\n\r\n    let acid: Move = {\r\n        move_name: 'Acid',\r\n        power: 40,\r\n        accuracy: 100,\r\n        type: 'Poison',\r\n        pp: 30,\r\n        effect: \"Has a chance to lower the target's Special Defense\",\r\n    };\r\n\r\n    let airMail: Item = {\r\n        item_name: 'air-mail',\r\n        item_description: 'placeholder desc',\r\n    };\r\n\r\n    let myBulbasaur: Pokemon = {\r\n        pkID: 9,\r\n        nickname: 'Whipper',\r\n        level: 100,\r\n        moves: [tackle, acid],\r\n        baseInfo: base,\r\n        holding: airMail,\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            Charles's Testing Room\r\n            <p>You clicked {count} times</p>\r\n            <button onClick={() => setCount(count + 1)}>Click me</button>\r\n            <br></br>\r\n            <TextField name=\"name\" label=\"Pokedex Number\" onChange={handleInputChange} value={count} />\r\n            <p>{JSON.stringify(base)}</p>\r\n            <PokemonCard pkmn={myBulbasaur}> </PokemonCard>\r\n        </div>\r\n    );\r\n}\r\nexport default TestCharles;\r\n","import React, { useState } from 'react';\r\nimport { getBasePokemon, getItem, getSpecificPokemon, addPokemon } from '../axios/api';\r\nimport { BasePokemon, Item, Pokemon, Move } from '../types/types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PokemonCard from '../components/pokemonCard/PokemonCard';\r\n\r\nfunction TestLarry() {\r\n    // Declare a new state variable, which we'll call \"count\"\r\n    let bulbasaur: BasePokemon = {\r\n        pokedex_number: 1,\r\n        name: 'Bulbasaur',\r\n        type1: 'Grass',\r\n        type2: 'Poison',\r\n        hp: 45,\r\n        attack: 49,\r\n        defense: 49,\r\n        special_attack: 65,\r\n        special_defense: 65,\r\n        speed: 45,\r\n        sprite_data: 'https://img.pokemondb.net/artwork/bulbasaur.jpg',\r\n    };\r\n\r\n    let ivysaur: BasePokemon = {\r\n        pokedex_number: 1,\r\n        name: 'Bulbasaur',\r\n        type1: 'Grass',\r\n        type2: 'Poison',\r\n        hp: 60,\r\n        attack: 62,\r\n        defense: 63,\r\n        special_attack: 80,\r\n        special_defense: 80,\r\n        speed: 60,\r\n        sprite_data: 'https://img.pokemondb.net/artwork/ivysaur.jpg',\r\n    };\r\n\r\n    const [count, setCount] = useState<number>(1);\r\n    const [level, setLevel] = useState<number>(90);\r\n    const [nickname, setNickname] = useState<String>('KI MI NO NA WA');\r\n    const [partyid, setPartyID] = useState<number>(1);\r\n    const [base, setBase] = useState<BasePokemon>(bulbasaur);\r\n    const [base2, setBase2] = useState<BasePokemon>(ivysaur);\r\n    const [item, setItem] = useState<Item>();\r\n\r\n    React.useEffect(() => {\r\n        getBasePokemon(count).then((res) => {\r\n            setBase(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    React.useEffect(() => {\r\n        getItem('poke-ball').then((res) => {\r\n            setItem(res.data);\r\n            console.log(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    const handleInputChange = (e) => {\r\n        setCount(e.target.value);\r\n    };\r\n\r\n    let tackle: Move = {\r\n        move_name: 'Tackle',\r\n        power: 40,\r\n        accuracy: 100,\r\n        type: 'Normal',\r\n        pp: 35,\r\n        effect: 'Charges the foe with a full-body tackle.',\r\n    };\r\n\r\n    let acid: Move = {\r\n        move_name: 'Acid',\r\n        power: 40,\r\n        accuracy: 100,\r\n        type: 'Poison',\r\n        pp: 30,\r\n        effect: \"Has a chance to lower the target's Special Defense\",\r\n    };\r\n\r\n    let airMail: Item = {\r\n        item_name: 'air-mail',\r\n        item_description: 'placeholder desc',\r\n    };\r\n\r\n    let myBulbasaur: Pokemon = {\r\n        pkID: 9,\r\n        nickname: 'Whipper',\r\n        level: 100,\r\n        moves: [tackle, acid],\r\n        baseInfo: base,\r\n        holding: airMail,\r\n    };\r\n\r\n    let myIvysaur: Pokemon = {\r\n        pkID: 7,\r\n        nickname: 'bubble-sort',\r\n        level: 99,\r\n        moves: [tackle],\r\n        baseInfo: base2,\r\n        holding: airMail,\r\n    };\r\n\r\n    const [pokemon, setPokemon] = useState<Pokemon>();\r\n    React.useEffect(() => {\r\n        addPokemon(count, level, nickname, partyid).then((res) => {\r\n            console.log(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    return (\r\n        <div>\r\n            Larry's Testing Room\r\n            <p>You clicked {count} times</p>\r\n            <button onClick={() => setCount(count + 1)}>Click me</button>\r\n            <br></br>\r\n            <TextField name=\"name\" label=\"Pokedex Number\" onChange={handleInputChange} value={count} />\r\n            <TextField name=\"level\" label=\"Level\" onChange={handleInputChange} value={level} />\r\n            <TextField name=\"nickname\" label=\"Nickname\" onChange={handleInputChange} value={nickname} />\r\n            <TextField name=\"party id\" label=\"Party id\" onChange={handleInputChange} value={partyid} />\r\n            <p>{JSON.stringify(base)}</p>\r\n            <p>{JSON.stringify(pokemon)}</p>\r\n            <PokemonCard pkmn={myBulbasaur}> </PokemonCard>\r\n            <PokemonCard pkmn={myIvysaur}> </PokemonCard>\r\n        </div>\r\n    );\r\n}\r\nexport default TestLarry;\r\n","import React, { useState } from 'react';\r\nimport { getParty, getUser, getMove, getUserID, deleteParty, deletePokemon, loseItem } from '../axios/api';\r\nimport { Party, Pokemon, BasePokemon, User, Move, Item } from '../types/types';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction TestEldon() {\r\n    // Declare a new state variable, which we'll call \"count\"\r\n    let bulbasaur: BasePokemon = {\r\n        pokedex_number: 1,\r\n        name: 'Bulbasaur',\r\n        type1: 'Grass',\r\n        type2: 'Poison',\r\n        hp: 45,\r\n        attack: 49,\r\n        defense: 49,\r\n        special_attack: 65,\r\n        special_defense: 65,\r\n        speed: 45,\r\n        sprite_data: 'https://img.pokemondb.net/artwork/bulbasaur.jpg',\r\n    };\r\n    let move1: Move = {\r\n        move_name: 'jump',\r\n        power: 40,\r\n        accuracy: 100,\r\n        type: 'poison',\r\n        pp: 3,\r\n        effect: 'jumps on top of jammie',\r\n    };\r\n    let poki1: Pokemon = {\r\n        pkID: 4,\r\n        nickname: 'Charlie',\r\n        level: 5,\r\n        moves: [move1],\r\n        baseInfo: bulbasaur,\r\n    };\r\n    let party1: Party = {\r\n        party_id: 12,\r\n        member: [poki1],\r\n    };\r\n    let user1: User = {\r\n        user_id: 5,\r\n        username: 'Darwin',\r\n    };\r\n    let item1: Item = {\r\n        item_name: 'string',\r\n        item_description: 'string',\r\n    };\r\n\r\n    const [count, setCount] = useState(1);\r\n    const [base, setBase] = useState<Party>(party1);\r\n    const [partyDel, setPartyDel] = useState<Party>(party1);\r\n    const [user, setUser] = useState<User>(user1);\r\n    const [userName, setUserName] = useState<User>(user1);\r\n    const [move, setMove] = useState<Move>(move1);\r\n    const [pokeDel, setPokeDel] = useState<Pokemon>(poki1);\r\n    const [itemDel, setItemDel] = useState<Item>(item1);\r\n\r\n    React.useEffect(() => {\r\n        getParty(count).then((res) => {\r\n            setBase(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    React.useEffect(() => {\r\n        deleteParty(count).then((res) => {\r\n            setPartyDel(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    React.useEffect(() => {\r\n        loseItem(15, 'absolite').then((res) => {\r\n            setItemDel(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    React.useEffect(() => {\r\n        deletePokemon(11).then((res) => {\r\n            setPokeDel(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    React.useEffect(() => {\r\n        getUser(count).then((res) => {\r\n            setUser(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    React.useEffect(() => {\r\n        getUserID('yiff.li').then((res) => {\r\n            setUserName(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    React.useEffect(() => {\r\n        getMove('after-you').then((res) => {\r\n            setMove(res.data);\r\n            console.log(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    const handleInputChange = (e) => {\r\n        setCount(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            Eldon's Testing Room\r\n            <p>You clicked {count} times</p>\r\n            <button onClick={() => setCount(count + 1)}>Click me</button>\r\n            <TextField name=\"name\" label=\"Party Number\" onChange={handleInputChange} value={count} />\r\n            <p>{JSON.stringify(base)}</p>\r\n            <p>{JSON.stringify(user)}</p>\r\n            <p>{JSON.stringify(userName)}</p>\r\n            <p>{JSON.stringify(move)}</p>\r\n            <p>{JSON.stringify(partyDel)}</p>\r\n            <p>{JSON.stringify(pokeDel)}</p>\r\n            <p>{JSON.stringify(itemDel)}</p>\r\n        </div>\r\n    );\r\n}\r\nexport default TestEldon;\r\n","import React, { useState } from 'react';\r\nimport { getBasePokemon, getItem, getParty, getUser, getMove, getUserID, deleteParty, deletePokemon, gainItem, addParty, learnMove, forgetMove } from '../axios/api';\r\nimport { BasePokemon, Item, Pokemon, Move, Party, User } from '../types/types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PokemonCard from '../components/pokemonCard/PokemonCard';\r\n\r\nfunction TestJammie() {\r\n    // Declare a new state variable, which we'll call \"count\"\r\n    //const [count, setCount] = useState(0);\r\n\r\n    let bulbasaur: BasePokemon = {\r\n        pokedex_number: 1,\r\n        name: 'Bulbasaur',\r\n        type1: 'Grass',\r\n        type2: 'Poison',\r\n        hp: 45,\r\n        attack: 49,\r\n        defense: 49,\r\n        special_attack: 65,\r\n        special_defense: 65,\r\n        speed: 45,\r\n        sprite_data: 'https://img.pokemondb.net/artwork/bulbasaur.jpg',\r\n    };\r\n    let move1: Move = {\r\n        move_name: 'jump',\r\n        power: 40,\r\n        accuracy: 100,\r\n        type: 'poison',\r\n        pp: 3,\r\n        effect: 'jumps',\r\n    };\r\n    let move2: Move = {\r\n        move_name: 'jump2',\r\n        power: 40,\r\n        accuracy: 100,\r\n        type: 'poison',\r\n        pp: 3,\r\n        effect: 'jumps',\r\n    };\r\n\r\n    let poki1: Pokemon = {\r\n        pkID: 4,\r\n        nickname: 'Charlie',\r\n        level: 5,\r\n        moves: [move1],\r\n        baseInfo: bulbasaur,\r\n    };\r\n    let party1: Party = {\r\n        party_id: 12,\r\n        member: [poki1],\r\n    };\r\n    let user1: User = {\r\n        user_id: 3,\r\n        username: 'Charles',\r\n    };\r\n    \r\n    let tackle: Move = {\r\n        move_name: 'Tackle',\r\n        power: 40,\r\n        accuracy: 100,\r\n        type: 'Normal',\r\n        pp: 35,\r\n        effect: 'Charges the foe with a full-body tackle.',\r\n    };\r\n\r\n    let acid: Move = {\r\n        move_name: 'Acid',\r\n        power: 40,\r\n        accuracy: 100,\r\n        type: 'Poison',\r\n        pp: 30,\r\n        effect: \"Has a chance to lower the target's Special Defense\",\r\n    };\r\n\r\n    const [count, setCount] = useState(1);\r\n    const [base, setBase] = useState<Party>(party1);\r\n    const [partyDel, setPartyDel] = useState<Party>(party1);\r\n    const [user, setUser] = useState<User>(user1);\r\n    const [userName, setUserName] = useState<User>(user1);\r\n    const [move, setMove] = useState<Move>(move1);\r\n    const [pokeDel, setPokeDel] = useState<Pokemon>(poki1);\r\n\r\n    // Only recognizing the most passed to ------------- here\r\n    const [moveLearned, setMoveLearned] = useState<Move>(move);\r\n    React.useEffect(() => {\r\n        learnMove(4, 'tackle', 'tackle', 'acid', 'acid')\r\n    }, [count]);\r\n\r\n    \r\n    // not working!!!\r\n    const [addingParty, setAddParty] = useState<Party>(party1);\r\n    React.useEffect(() => {\r\n        addParty(count).then((res) => {\r\n            setAddParty(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n\r\n    React.useEffect(() => {\r\n        getParty(count).then((res) => {\r\n            setBase(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    React.useEffect(() => {\r\n        deleteParty(count).then((res) => {\r\n            setPartyDel(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    React.useEffect(() => {\r\n        deletePokemon(11).then((res) => {\r\n            setPokeDel(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    React.useEffect(() => {\r\n        getUser(count).then((res) => {\r\n            setUser(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    React.useEffect(() => {\r\n        getUserID('yiff.li').then((res) => {\r\n            setUserName(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    React.useEffect(() => {\r\n        getMove('after-you').then((res) => {\r\n            setMove(res.data);\r\n            console.log(res.data);\r\n        });\r\n    }, [count]);\r\n\r\n    const handleInputChange = (e) => {\r\n        setCount(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            Jammie's Testing Room\r\n            <p>You clicked {count} times</p>\r\n            <button onClick={() => setCount(count + 1)}>Click me</button>\r\n            <TextField name=\"name\" label=\"Party Number\" onChange={handleInputChange} value={count} />\r\n            <p>{JSON.stringify(user)}</p>\r\n            <p>{JSON.stringify(moveLearned)}</p>\r\n        </div>\r\n    );\r\n}\r\nexport default TestJammie;\r\n","import React, { Component, useState } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Example from './components/Example';\r\nimport ExampleBoatView from './components/ExampleBoatView';\r\nimport ButtonAppBar from './components/ButtonAppBar';\r\n\r\nimport TestCharles from './test/TestCharles';\r\nimport TestLarry from './test/TestLarry';\r\nimport TestEldon from './test/TestEldon';\r\nimport TestJammie from './test/TestJammie';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <ButtonAppBar />\r\n                <Switch>\r\n                    {' '}\r\n                    {/* The Switch decides which component to show based on the current URL.*/}\r\n                    <Route exact path=\"/\" component={Example}></Route>\r\n                    <Route exact path=\"/test/charles\" component={TestCharles}></Route>\r\n                    <Route exact path=\"/test/larry\" component={TestLarry}></Route>\r\n                    <Route exact path=\"/test/eldon\" component={TestEldon}></Route>\r\n                    <Route exact path=\"/test/jammie\" component={TestJammie}></Route>\r\n                </Switch>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App /> {/* The various pages will be displayed by the `Main` component. */}\r\n    </BrowserRouter>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}